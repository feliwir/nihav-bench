From c3e0281eec913ea799eb4b46b3f56bd590e1d85b Mon Sep 17 00:00:00 2001
From: Stephan Vedder <vedder@mbits.info>
Date: Wed, 17 Nov 2021 15:19:28 +0100
Subject: [PATCH] Performance improvements

---
 nihav-duck/src/codecs/vp6enc/dsp.rs | 6 ++++--
 nihav-duck/src/codecs/vpcommon.rs   | 3 ++-
 2 files changed, 6 insertions(+), 3 deletions(-)

diff --git a/nihav-duck/src/codecs/vp6enc/dsp.rs b/nihav-duck/src/codecs/vp6enc/dsp.rs
index c1e8653..7421667 100644
--- a/nihav-duck/src/codecs/vp6enc/dsp.rs
+++ b/nihav-duck/src/codecs/vp6enc/dsp.rs
@@ -53,6 +53,7 @@ const C5S3: i32 = 36410;
 const C6S2: i32 = 25080;
 const C7S1: i32 = 12785;
 
+#[inline]
 fn mul16(a: i32, b: i32) -> i32 {
     let res = a * b;
     (res + if res < 0 { 0xFFFF } else { 0 }) >> 16
@@ -94,7 +95,8 @@ macro_rules! fdct_step {
 
 #[allow(clippy::erasing_op)]
 pub fn vp_fdct(blk: &mut [i16; 64]) {
-    for row in blk.chunks_mut(8) {
+    for i in 0..8 {
+        let row = &mut blk[(i * 8)..(i * 8) + 8];
         fdct_step!(row[0], row[1], row[2], row[3], row[4], row[5], row[6], row[7],
                    row[0], row[1], row[2], row[3], row[4], row[5], row[6], row[7]);
     }
@@ -443,7 +445,7 @@ count2: 0,
         let dst = &mut self.ref_blk[dst_idx];
         if copy_mode {
             let src = &tmp_blk[2 * 16 + 2..];
-            for (dline, sline) in dst.chunks_mut(8).zip(src.chunks(16)).take(8) {
+            for (dline, sline) in dst.chunks_exact_mut(8).zip(src.chunks(16)).take(8) {
                 dline.copy_from_slice(&sline[..8]);
             }
         } else if bicubic {
diff --git a/nihav-duck/src/codecs/vpcommon.rs b/nihav-duck/src/codecs/vpcommon.rs
index 8474dc6..541d6e3 100644
--- a/nihav-duck/src/codecs/vpcommon.rs
+++ b/nihav-duck/src/codecs/vpcommon.rs
@@ -218,6 +218,7 @@ const C5S3: i32 = 36410;
 const C6S2: i32 = 25080;
 const C7S1: i32 = 12785;
 
+#[inline]
 fn mul16(a: i32, b: i32) -> i32 {
     (a * b) >> 16
 }
@@ -258,7 +259,7 @@ macro_rules! idct_step {
 
 pub fn vp_idct(coeffs: &mut [i16; 64]) {
     let mut tmp = [0i32; 64];
-    for (src, dst) in coeffs.chunks(8).zip(tmp.chunks_mut(8)) {
+    for (src, dst) in coeffs.chunks(8).zip(tmp.chunks_exact_mut(8)) {
         idct_step!(src[0], src[1], src[2], src[3], src[4], src[5], src[6], src[7],
                    dst[0], dst[1], dst[2], dst[3], dst[4], dst[5], dst[6], dst[7], 0, 0, i32);
     }
-- 
2.30.2

